{
	"info": {
		"_postman_id": "2ed40462-6006-4213-b76f-fa660228d55c",
		"name": "we-care-server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9645754"
	},
	"item": [
		{
			"name": "GET Users by type",
			"item": [
				{
					"name": "GET All users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Users {\r\n  users {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    accountType\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "GET All carers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var response = JSON.parse(responseBody);\r",
									"\r",
									"var carerId = response.data.carers[0].userId.id;\r",
									"pm.collectionVariables.set(\"carerId\", carerId);\r",
									"\r",
									"var alternativeCarerId = response.data.carers[1].userId.id;\r",
									"pm.collectionVariables.set(\"alternativeCarerId\", alternativeCarerId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Carers {\r\n  carers {\r\n    userId{\r\n          id\r\n          firstName\r\n          lastName\r\n          email\r\n          phoneNumber\r\n      }\r\n      postcode\r\n      gender\r\n      days\r\n      notificationCount\r\n      appointmentCount\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "GET All patients",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var response = JSON.parse(responseBody);\r",
									"\r",
									"var patientId = response.data.patients[0].userId.id;\r",
									"pm.collectionVariables.set(\"patientId\", patientId);\r",
									"var patient2Id = response.data.patients[1].userId.id;\r",
									"pm.collectionVariables.set(\"patient2Id\", patient2Id);\r",
									"var patient3Id = response.data.patients[2].userId.id;\r",
									"pm.collectionVariables.set(\"patient3Id\", patient3Id);\r",
									"var patient4Id = response.data.patients[3].userId.id;\r",
									"pm.collectionVariables.set(\"patient4Id\", patient4Id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Patients {\r\n  patients {\r\n    userId{\r\n          id\r\n          firstName\r\n          lastName\r\n          email\r\n          phoneNumber\r\n      }\r\n      postcode\r\n      gender\r\n      genderPreference\r\n      days\r\n      notificationCount\r\n      appointmentCount\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "GET Supervisor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var response = JSON.parse(responseBody);\r",
									"\r",
									"var supervisorId = response.data.supervisor.id;\r",
									"pm.collectionVariables.set(\"supervisorId\", supervisorId);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Supervisor($accountType: String!) {\r\n  supervisor(accountType: $accountType) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n  }\r\n}",
								"variables": "{\r\n    \"accountType\": \"supervisor\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Approve user",
			"item": [
				{
					"name": "Update approved status",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateApprovedStatus($userId: ID!) {\r\n  updateApprovedStatus(userId: $userId) {\r\n    success\r\n    userId\r\n}\r\n}",
								"variables": "{\r\n    \"userId\": \"{{patientId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User info",
			"item": [
				{
					"name": "GET Carer Info By userId",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query CarerInfo($userId: ID!) {\r\n  carerInfo(userId: $userId) {\r\n    userId{\r\n        id\r\n    firstName\r\n    lastName\r\n    email\r\n    accountType\r\n    }\r\n    postcode\r\n      gender\r\n      days\r\n      notificationCount\r\n      appointmentCount\r\n\r\n  }\r\n}",
								"variables": "{\r\n    \"userId\": \"{{carerId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "GET Patient Info By userId",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query PatientInfo($userId: ID!) {\r\n  patientInfo(userId: $userId) {\r\n    userId{\r\n        id\r\n    firstName\r\n    lastName\r\n    email\r\n    accountType\r\n    }\r\n    postcode\r\n      gender\r\n      days\r\n      notificationCount\r\n      appointmentCount\r\n\r\n  }\r\n}",
								"variables": "{\r\n    \"userId\": \"{{patientId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "Update Carer info",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateCarerInfo($userId: ID!, $updateInput: CarerInfoInput) {\r\n  updateCarerInfo(userId: $userId, updateInput: $updateInput) {\r\n    success\r\n    userId\r\n}\r\n}",
								"variables": "{\r\n    \"userId\": \"{{carerId}}\",\r\n    \"updateInput\": {\r\n        \"postcode\": \"B15 4RT\",\r\n        \"gender\": \"female\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "Update Patient info",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdatePatientInfo($userId: ID!, $updateInput: PatientInfoInput) {\r\n  updatePatientInfo(userId: $userId, updateInput: $updateInput) {\r\n    success\r\n    userId\r\n}\r\n}",
								"variables": "{\r\n    \"userId\": \"{{patientId}}\",\r\n    \"updateInput\": {\r\n        \"postcode\": \"B12 4RT\",\r\n        \"genderPreference\": \"female\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "SIGNUP New Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var response = JSON.parse(responseBody);\r",
									"\r",
									"var patientUsername = response.data.patientSignup.patient.username;\r",
									"var newPatientId = response.data.patientSignup.userId;\r",
									"\r",
									"pm.collectionVariables.set(\"newPatientId\", newPatientId);\r",
									"pm.collectionVariables.set(\"patientUsername\", patientUsername);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation PatientSignup($signupInput: SignupInput!, $patientInput: PatientInput!) {\r\n  patientSignup(signupInput: $signupInput, patientInput: $patientInput) {\r\n    success\r\n    patient{\r\n        username\r\n        gender\r\n    }\r\n    userId\r\n  }\r\n}",
								"variables": "{\r\n  \"signupInput\": {\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"email\": \"{{$randomExampleEmail}}\",\r\n    \"password\": \"Password123!\",\r\n    \"phoneNumber\":\"07777777777\"\r\n  },\r\n  \"patientInput\":{\r\n    \"gender\": \"female\",\r\n    \"genderPreference\": \"none\",\r\n    \"postcode\": \"B29 5PZ\",\r\n    \"days\": [\r\n        \"monday\",\r\n        \"tuesday\",\r\n        \"wednesday\",\r\n        \"thursday\",\r\n        \"friday\",\r\n        \"saturday\",\r\n        \"sunday\"\r\n      ]\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "SIGNUP New Carer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var response = JSON.parse(responseBody);\r",
									"\r",
									"var carerUsername = response.data.carerSignup.carer.username;\r",
									"var newCarerId = response.data.carerSignup.userId;\r",
									"\r",
									"pm.collectionVariables.set(\"newCarerId\", newCarerId);\r",
									"pm.collectionVariables.set(\"carerUsername\", carerUsername);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CarerSignup($signupInput: SignupInput!, $carerInput: CarerInput!) {\r\n  carerSignup(signupInput: $signupInput, carerInput: $carerInput) {\r\n    success\r\n    carer{\r\n        username\r\n        gender\r\n    }\r\n    userId\r\n  }\r\n}",
								"variables": "{\r\n  \"signupInput\": {\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"email\": \"{{$randomExampleEmail}}\",\r\n    \"password\": \"Password123!\",\r\n    \"phoneNumber\":\"07777777777\"\r\n  },\r\n  \"carerInput\":{\r\n    \"gender\": \"female\",\r\n    \"postcode\": \"B29 5PZ\",\r\n    \"days\": [\r\n        \"monday\",\r\n        \"tuesday\",\r\n        \"wednesday\",\r\n        \"thursday\",\r\n        \"friday\"\r\n      ]\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "CREATE PatientSetup",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation Mutation($patientInput: PatientInput!) {\r\n  patientSetup(patientInput: $patientInput) {\r\n    success\r\n    patient{\r\n        username\r\n    }\r\n    userId\r\n  }\r\n}",
								"variables": "{\r\n  \"patientInput\": {\r\n      \"userId\": \"{{newUserId}}\",\r\n    \"gender\": \"female\",\r\n    \"genderPreference\": \"none\",\r\n    \"username\": \"{{username}}\",\r\n    \"postcode\": \"B29 5PZ\",\r\n    \"days\": [\r\n        \"monday\",\r\n        \"tuesday\",\r\n        \"wednesday\",\r\n        \"thursday\",\r\n        \"friday\",\r\n        \"saturday\",\r\n        \"sunday\"\r\n      ]\r\n  }\r\n}\r\n"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "LOGIN",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation Mutation($loginInput: LoginInput!) {\r\n  login(loginInput: $loginInput) {\r\n    success\r\n    token\r\n    user{\r\n          id\r\n          firstName\r\n          lastName\r\n          email\r\n          accountType\r\n      }\r\n  }\r\n}",
								"variables": "{\r\n  \"loginInput\": {\r\n    \"email\": \"{{newUserEmail}}\",\r\n    \"password\": \"Password123!\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reviews",
			"item": [
				{
					"name": "Update Carer reviews",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateCarerReviews($userId: ID!, $reviewInput: ReviewInput) {\r\n  updateCarerReviews(userId: $userId, reviewInput: $reviewInput) {\r\n    success\r\n    userId\r\n}\r\n}",
								"variables": "{\r\n    \"userId\": \"{{carerId}}\",\r\n    \"reviewInput\": {\r\n        \"comment\": \"nice carer with good manners!\",\r\n        \"score\": 4\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "Update Appointment review",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateAppointmentReview($reviewInput: ReviewInput, $appointmentId: ID!) {\r\n  updateAppointmentReview(reviewInput: $reviewInput, appointmentId: $appointmentId) {\r\n    success\r\n    userId\r\n}\r\n}",
								"variables": "{\r\n    \"appointmentId\": \"{{appointmentId}}\",\r\n    \"reviewInput\": {\r\n        \"comment\": \"I had a very nice carer and he was on time!\",\r\n        \"score\": 5\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Appointments",
			"item": [
				{
					"name": "GET All Appointments",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Appointments {\r\n  allAppointments {\r\n    id\r\n    patientId\r\n    carerId\r\n    start\r\n    end\r\n    status\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "GET Appointments By userId",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query AppointmentsByUserId($userId: ID!) {\r\n  appointmentsByUserId(userId: $userId) {\r\n    id\r\n    appointmentDate\r\n    patientId{\r\n        id\r\n        firstName\r\n        lastName\r\n        patientProfileId{\r\n            postcode\r\n        }\r\n    }\r\n    carerId{\r\n        id\r\n        firstName\r\n        lastName\r\n    }\r\n    start\r\n    end\r\n    status\r\n  }\r\n}",
								"variables": "{\r\n    \"userId\": \"{{patientId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "GET Appointments By Date And UserId",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query AppointmentsByDateAndUserId($userId: ID!, $dateInput: DateInput) {\r\n  appointmentsByDateAndUserId(userId: $userId, dateInput: $dateInput) {\r\n    id\r\n    appointmentDate\r\n    patientId{\r\n        id\r\n        firstName\r\n        lastName\r\n        patientProfileId{\r\n            postcode\r\n        }\r\n    }\r\n    carerId{\r\n        id\r\n        firstName\r\n        lastName\r\n    }\r\n    start\r\n    end\r\n    status\r\n  }\r\n}",
								"variables": "{\r\n    \"userId\": \"{{carerId}}\",\r\n    \"dateInput\": {\r\n        \"dayStart\": \"2022-09-01T00:00:00\",\r\n        \"dayEnd\": \"2022-09-02T00:00:00\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "GET Appointment Notes By userId",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query AppointmentNotesByUserId($userId: ID!) {\r\n  appointmentsByUserId(userId: $userId) {\r\n    start\r\n    carerNotes\r\n  }\r\n}",
								"variables": "{\r\n    \"userId\": \"{{patientId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "Create Appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var response = JSON.parse(responseBody);\r",
									"\r",
									"var appointmentId = response.data.createAppointment.id;\r",
									"pm.collectionVariables.set(\"appointmentId\", appointmentId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateAppointment($appointmentInput: AppointmentInput!) {\r\n  createAppointment(appointmentInput: $appointmentInput) {\r\n   success\r\n   id\r\n  }\r\n}",
								"variables": "{\r\n    \"appointmentInput\":{\r\n    \"carerId\": \"{{carerId}}\",\r\n    \"patientId\": \"{{patient4Id}}\",\r\n    \"start\": \"2022-09-26T14:00:00.000+00:00\",\r\n    \"end\": \"2022-09-26T15:00:00.000+00:00\",\r\n    \"appointmentDate\": \"2022-09-26T14:00:00.000+00:00\",\r\n    \"title\": \"New appointment\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "Add patient note to appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateAppointmentPatientNote($appointmentId: ID!, $trigger: String!, $appointmentUpdateInput: AppointmentUpdateInput) {\r\n  updateAppointment(appointmentId: $appointmentId, trigger: $trigger, appointmentUpdateInput: $appointmentUpdateInput) {\r\n    success\r\n    appointment{\r\n        id\r\n        patientNotes\r\n    }\r\n}\r\n}",
								"variables": "{\r\n    \"appointmentId\": \"{{appointmentId}}\",\r\n    \"trigger\": \"patientNote\",\r\n    \"appointmentUpdateInput\":{\r\n        \"note\": \"{{$randomLoremSentence}}\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "Check in appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateAppointmentCheckin($appointmentId: ID!, $trigger: String!, $appointmentUpdateInput: AppointmentUpdateInput) {\r\n  updateAppointment(appointmentId: $appointmentId, trigger: $trigger, appointmentUpdateInput: $appointmentUpdateInput) {\r\n    success\r\n    appointment{\r\n        id\r\n        appointmentDate\r\n        patientId\r\n        carerId\r\n        start\r\n        end\r\n        actualStart\r\n        status\r\n    }\r\n}\r\n}",
								"variables": "{\r\n    \"appointmentId\": \"63149343a2c0f0b84c6e1522\",\r\n    \"trigger\": \"checkin\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "Check out appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateAppointmentCheckout($appointmentId: ID!, $trigger: String!, $appointmentUpdateInput: AppointmentUpdateInput) {\r\n  updateAppointment(appointmentId: $appointmentId, trigger: $trigger, appointmentUpdateInput: $appointmentUpdateInput) {\r\n    success\r\n    appointment{\r\n        id\r\n        appointmentDate\r\n        patientId\r\n        carerId\r\n        start\r\n        end\r\n        actualStart\r\n        actualEnd\r\n        status\r\n    }\r\n}\r\n}",
								"variables": "{\r\n    \"appointmentId\": \"63149343a2c0f0b84c6e1522\",\r\n    \"trigger\": \"checkout\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "Add carer note to appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateAppointmentCarerNote($appointmentId: ID!, $trigger: String!, $appointmentUpdateInput: AppointmentUpdateInput) {\r\n  updateAppointment(appointmentId: $appointmentId, trigger: $trigger, appointmentUpdateInput: $appointmentUpdateInput) {\r\n    success\r\n    appointment{\r\n        id\r\n        carerNotes\r\n    }\r\n}\r\n}",
								"variables": "{\r\n    \"appointmentId\": \"{{appointmentId}}\",\r\n    \"trigger\": \"carerNote\",\r\n    \"appointmentUpdateInput\":{\r\n        \"note\": \"{{$randomLoremSentence}}\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "Reallocate appointment to new carer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateAppointmentCarer($appointmentId: ID!, $trigger: String!, $appointmentUpdateInput: AppointmentUpdateInput) {\r\n  updateAppointment(appointmentId: $appointmentId, trigger: $trigger, appointmentUpdateInput: $appointmentUpdateInput) {\r\n    success\r\n    appointment{\r\n        id\r\n        carerId\r\n    }\r\n}\r\n}",
								"variables": "{\r\n    \"appointmentId\": \"{{appointmentId}}\",\r\n    \"trigger\": \"carerChange\",\r\n    \"appointmentUpdateInput\":{\r\n        \"carerId\": \"{{alternativeCarerId}}\",\r\n        \"start\": \"2022-09-22T19:00:00.000+00:00\",\r\n        \"end\":\"2022-09-22T20:00:00.000+00:00\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "Add review to appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateAppointmentCarer($appointmentId: ID!, $trigger: String!, $appointmentUpdateInput: AppointmentUpdateInput) {\r\n  updateAppointment(appointmentId: $appointmentId, trigger: $trigger, appointmentUpdateInput: $appointmentUpdateInput) {\r\n    success\r\n    appointment{\r\n        id\r\n        carerId\r\n    }\r\n}\r\n}",
								"variables": "{\r\n    \"appointmentId\": \"{{appointmentId}}\",\r\n    \"trigger\": \"review\",\r\n    \"appointmentUpdateInput\":{\r\n        \"carerId\": \"{{alternativeCarerId}}\",\r\n        \"review\": {\r\n            \"patientId\": \"{{patientId}}\",\r\n            \"score\": 4\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "Delete Appointment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation DeleteAppointment($appointmentId: ID!) {\r\n  deleteAppointment(appointmentId: $appointmentId) {\r\n   success\r\n   carerId\r\n   patientId\r\n  }\r\n}",
								"variables": "{\r\n    \"appointmentId\":\"{{appointmentId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notifications",
			"item": [
				{
					"name": "GET Received Notifications By userId",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query ReceivedNotificationsByUserId($userId: ID!, $mailType: String!) {\r\n  notificationsByUserId(userId: $userId, mailType: $mailType) {\r\n    id\r\n    notificationDate\r\n    senderId\r\n    receiverId\r\n    notificationText\r\n    isRead\r\n  }\r\n}",
								"variables": "{\r\n    \"userId\": \"{{patientId}}\",\r\n    \"mailType\": \"received\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "GET Sent Notifications By userId",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query SentNotificationsByUserId($userId: ID!, $mailType: String!) {\r\n  notificationsByUserId(userId: $userId, mailType: $mailType) {\r\n    id\r\n    notificationDate\r\n    senderId\r\n    receiverId\r\n    notificationText\r\n    isRead\r\n  }\r\n}",
								"variables": "{\r\n    \"userId\": \"{{carerId}}\",\r\n    \"mailType\": \"sent\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "GET All Notifications By userId",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query AllNotificationsByUserId($userId: ID!, $mailType: String!) {\r\n  notificationsByUserId(userId: $userId, mailType: $mailType) {\r\n    id\r\n    notificationDate\r\n    senderId\r\n    receiverId\r\n    notificationText\r\n    isRead\r\n  }\r\n}",
								"variables": "{\r\n    \"userId\": \"{{carerId}}\",\r\n    \"mailType\": \"all\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "Update IsRead status",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateIsReadStatus($notificationId: ID!, $userId: ID) {\r\n  updateIsReadStatus(notificationId: $notificationId, userId: $userId) {\r\n    id\r\n    notificationDate\r\n    senderId\r\n    receiverId\r\n    notificationText\r\n    isRead\r\n}\r\n}",
								"variables": "{\r\n    \"userId\": \"6311f2d9c3dd8bb84a9377a9\",\r\n    \"notificationId\": \"6311f2dbc3dd8bb84a937988\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dashboards",
			"item": [
				{
					"name": "GET Carer dashboard",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query CarerDashboard($userId: ID!) {\r\n  carerDashboard(userId: $userId) {\r\n    carer {\r\n      userId{\r\n          id\r\n          firstName\r\n          lastName\r\n          email\r\n          phoneNumber\r\n      }\r\n      postcode\r\n      days\r\n      notificationCount\r\n      appointmentCount\r\n    }\r\n    appointments {\r\n      id\r\n      patientId\r\n      carerId\r\n      start\r\n      end\r\n      status\r\n      actualStart\r\n      actualEnd\r\n    }\r\n    notifications {\r\n      notificationDate\r\n      receiverId\r\n      senderId\r\n      isRead\r\n      notificationText\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n    \"userId\": \"{{carerId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "GET Patient dashboard",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query PatientDashboard($userId: ID!) {\r\n  patientDashboard(userId: $userId) {\r\n    patient {\r\n      userId {\r\n          id\r\n          firstName\r\n          lastName\r\n          email\r\n          phoneNumber\r\n      }\r\n      postcode\r\n      days\r\n      notificationCount\r\n      appointmentCount\r\n    }\r\n    appointments {\r\n      id\r\n      patientId\r\n      carerId\r\n      start\r\n      end\r\n      status\r\n      actualStart\r\n      actualEnd\r\n    }\r\n    notifications {\r\n      notificationDate\r\n      receiverId\r\n      senderId\r\n      isRead\r\n      notificationText\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n    \"userId\": \"{{patientId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "GET Matching patients for Carer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query FindPatientsByCarerGenderAndDay($userId: ID!, $dayInput: DayInput) {\r\n  findPatientsByCarerGenderAndDay(userId: $userId, dayInput: $dayInput) {\r\n    userId {\r\n          id\r\n          firstName\r\n          lastName\r\n          email\r\n      }\r\n      gender\r\n      postcode\r\n      days\r\n      notificationCount\r\n      appointmentCount\r\n    }\r\n  }\r\n",
								"variables": "{\r\n    \"userId\": \"{{carerId}}\",\r\n    \"dayInput\": {\r\n        \"date\": \"2022-09-21T07:00:00.000+00:00\"\r\n    }\r\n    \r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				},
				{
					"name": "GET Matching patients for Carer - Sex only",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query FindPatientsByCarerGender($userId: ID!) {\r\n  findPatientsByCarerGender(userId: $userId) {\r\n      userId {\r\n          id\r\n          firstName\r\n          lastName\r\n          email\r\n      }\r\n      gender\r\n      genderPreference\r\n      postcode\r\n      days\r\n      notificationCount\r\n      appointmentCount\r\n    }\r\n\r\n}",
								"variables": "{\r\n    \"userId\": \"{{carerId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000"
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "carerId",
			"value": ""
		},
		{
			"key": "patientId",
			"value": ""
		},
		{
			"key": "supervisorId",
			"value": ""
		},
		{
			"key": "newUserId",
			"value": ""
		},
		{
			"key": "newUserEmail",
			"value": ""
		},
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "appointmentId",
			"value": ""
		},
		{
			"key": "alternativeCarerId",
			"value": ""
		},
		{
			"key": "newCarerId",
			"value": ""
		},
		{
			"key": "carerUsername",
			"value": ""
		},
		{
			"key": "patient2Id",
			"value": ""
		},
		{
			"key": "patient3Id",
			"value": ""
		},
		{
			"key": "patient4Id",
			"value": ""
		}
	]
}